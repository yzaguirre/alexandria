Debian repo
	apt install adb android-libadb android-libbase android-libboringssl android-libcrypto-utils android-libcutils android-liblog android-sdk-platform-tools-common
Symlink
	ln -s /VMs/opt/android-sdk-linux/platform-tools/adb /usr/local/bin/adb
Homebrew
	brew cask install android-platform-tools
http://www.emoticode.net/bash/launch-app-sh.html
key
http://forum.xda-developers.com/showthread.php?t=2247471

http://www.mibmobileax515.blogspot.com/2013/01/rootear-bmobile-ax515-facil-y-rapido.html
http://androidforums.com/android-applications/97135-how-do-i-delete-completely-remove-preinstalled-facebook-application-my-htc-hero.html
http://www.taringa.net/comunidades/comu-nueva-android/6064424/Acabo-de-comprar-un-bmobile-ax-515-ayuda.html

http://forum.xda-developers.com/showthread.php?t=581976
	 mount -o rw,remount -t yaffs2 /dev/block/mtdblock3 /system
http://forum.xda-developers.com/showthread.php?t=1474956
https://developer.android.com/tools/help/adb.html
http://forum.xda-developers.com/showthread.php?t=581976

To change from r/o to r/w
	$ adb remount
	$ adb shell
x	# cd data/app
	# cd system/app
	# rm -r appname.apk
	# rm -r eBuddy.apk
	# rm -r YouTube.apk
	# rm -r Facebook_for_Android_1.8.3.apk
	# rm -r Twitter_3.1.1.apk
	# rm -r WhatsApp.apk
	# rm -r Skype2.7.apk
	# rm -r Superuser.apk
	
	# adb pull /system/app/Superuser.apk
Pull everything
	# adb pull /data/app test
	# adb pull /system/app android_pesky_apps
	
	# adb pull /data/data pesky_data
	# rm -r com.whatsapp

Close ADB
	adb reboot    (to reboot your Nook Tablet)
	adb kill-server     (to stop adb server)

Shutdown
	adb shell reboot -p

Push:
	adb push appname.apk /data/app
If you want to PUSH all the files located in a folder then:
	adb push test /data/app
to push all the .apk's located in C:\nookroot\test folder to /data/app 

push a ssh private key
	adb push id_rsa /sdcard/Documents

ADB permissions
https://askubuntu.com/questions/213874/how-to-configure-adb-access-for-android-devices
	lsusb | grep -i 0c03
SUBSYSTEM=="usb", ATTR{idVendor}=="0bb4", ATTR{idProduct}=="0c03", MODE="0600", OWNER="david"

	vim /etc/udev/rules.d/11-android.rules
SUBSYSTEM=="usb", ATTR{idVendor}=="0bb4", ATTR{idProduct}=="0c03", MODE="0600", OWNER="david"

Change storage unit
	adb shell pm set-install-location 1
Remove apps
https://stackoverflow.com/questions/25927124/android-studio-how-to-uninstall-apk-or-execute-adb-command-automatically-bef
https://stackoverflow.com/questions/17556750/how-to-uninstall-an-android-app-from-command-line-on-the-device
https://news.ycombinator.com/item?id=18864220
	pm uninstall --user 0 <name of package>
	adb shell pm uninstall --user 0 com.2020app
Remove app keep cache
	pm uninstall -k --user 0 <name of package>
	adb shell pm uninstall -k <name of package>
Clear data cache
https://stackoverflow.com/questions/10934304/clear-android-application-user-data#26400275
	adb shell pm clear com.2020App

Install apk
https://www.smartphones.how/internet/install-an-apk-file-from-computer-using-adb-command
	adb install example.apk
Logcat
https://developer.android.com/studio/command-line/logcat
	adb logcat
For package space
https://stackoverflow.com/questions/39297951/adb-logcat-filter-by-package-name
	adb shell ps | grep com.example.package
	adb logcat --pid=<pid>

Open deep-link URLs
https://varunbarad.com/blog/testing-deep-link-urls-using-adb
	adb shell am start -a android.intent.action.VIEW -d "https://varunbarad.com/blog"

Start an app
https://stackoverflow.com/questions/4567904/how-to-start-an-application-using-android-adb-tools
	adb shell am start -n com.package.name/com.package.name.ActivityName
	adb shell am start -a com.example.ACTION_NAME -n com.package.name/com.package.name.ActivityName 

Screenshots
https://developer.android.com/studio/command-line/adb#screencap
https://medium.com/mobile-app-development-publication/capture-picture-and-record-video-using-adb-5f4c582acb3c
https://stackoverflow.com/questions/42564693/adb-exec-out-not-working
	adb shell screencap /storage/emulated/0/DCIM/Screenshots/filename.png
	adb exec-out screencap -p > myfile.png
	adb exec-out screencap -p | xclip -selection clipboard -target image/png
	alias capture="adb exec-out screencap -p > $@"
	capture myfile.jpg

Record Screen
https://developer.android.com/studio/command-line/adb#screenrecord
https://adbshell.com/commands/adb-shell-screenrecord
https://stackoverflow.com/questions/28217333/how-to-record-android-devices-screen-on-android-version-below-4-4-kitkat
https://programmer.group/adb-screen-capture-and-recording-commands.html
	adb shell screenrecord /mnt/sdcard/Download/test.mp4
	adb shell screenrecord /storage/emulated/0/DCIM/Screenshots/filename.mp4
	adb pull /sdcard/DCIM/Screenshots/filename.mp4
Record with scrcpy. See ./guiscrcpy.txt
	scrcpy --no-display --record file.mp4
	scrcpy -Nr file.mkv

Wireless adb
https://bobbertoc.medium.com/debugging-android-wirelessly-for-react-native-made-easy-6461c36ac38b
https://www.reddit.com/r/reactnative/comments/noy5xy/debugging_android_wirelessly_for_react_native/
https://stackoverflow.com/questions/50211010/android-wifi-adb-plugin-not-working-with-some-android-real-device#50211408
https://android.stackexchange.com/questions/234465/how-do-you-pair-a-device-for-wireless-debugging-with-a-qr-code
Activate while plugged-in or on Android 9 and earlier
	adb tcpip 6969
	adb pair phone_ip:port pair_code
	adb connect phone_ip:port
	adb connect 192.168.0.10:6969
	adb devices
	adb -s DEVICE_ID shell
Android properties
	adb shell getprop "ro.build.version.release"
	adb shell getprop "ro.build.version.sdk"

Get coordinates on screen
Activate "Pointer location" in developer options
Screen taps
	adb shell input tap 538 1099
Send keyboard strokes
	adb shell input text "Hello"
Send key events
Back
	adb shell input keyevent 4
Touchscreen swipe
	adb shell input touchscreen swipe 500 500 500 1000 2000

Lists packages
	adb shell pm list packages

Information an app has on a device
	adb shell
	run-as bk.yt.example
	pwd

Run commands
https://stackoverflow.com/questions/18471780/retrieve-database-or-any-other-file-from-the-internal-storage-using-run-as
	adb shell
	run-as com.myapp
Install a script
	echo "tar c databases/ | nc 192.168.0.7 8080" > pass.sh
Listen to ncat on regular computer
	ncat -lp 8080 | tar xv
Then
	adb shell run-as com.myapp sh pass.sh

Control your device from your computer - ADB tutorial
https://www.youtube.com/watch?v=uOPcUjVl2YQ

YOU NEED TO TRY These ADB Commands! | Best ADB Commands For Android 2021
https://www.youtube.com/watch?v=XoJ7o0A-DMc

How to use ADB and scrcpy to interact with your Android phone
https://www.youtube.com/watch?v=0Anz2Y2O4Tk

Automate Repeated Stuff - Using ADB (adb push & pull)
https://www.youtube.com/watch?v=0lBTc4aE10I
echo "Pulling newest video"
file=$(adb shell ls sdcard/DCIM/Camera | grep mp4 | tail -n1 | sed 's/^M//g')
adb pull "sdcard/DCIM/Camera/$file"

https://ivrodriguez.com/installing-self-signed-certificates-on-android/
https://stackoverflow.com/questions/44942851/install-user-certificate-via-adb

If encrypted
https://stackoverflow.com/questions/45409854/adb-command-to-check-if-the-device-is-encrypted#45419068
	adb shell getprop ro.crypto.state
