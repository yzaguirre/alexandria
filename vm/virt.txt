See
https://www.cyberciti.biz/faq/centos-rhel-linux-kvm-virtulization-tutorial/
../redes/networks.txt
../rust/rustyhermit.txt

https://libvirt.org/
https://virt-manager.org/
https://news.ycombinator.com/item?id=19736309
https://www.qemu.org/2019/04/24/qemu-4-0-0/

Check CPU virtualization support
	egrep -c '(vmx|svm)' /proc/cpuinfo
Create a storage directory
	mkdir /vm_storage
	groupadd kvm
	chown root:kvm /vm_storage
	chmod g+w /vm_storage
	usermod -aG kvm david
Install server packages
	apt install bridge-utils libvirt-bin qemu-kvm qemu-system
Installs the following:
bridge-utils cpu-checker ibverbs-providers ipxe-qemu ipxe-qemu-256k-compat-efi-roms libcacard0 libfdt1 libibverbs1 libiscsi7 librados2 librbd1 librdmacm1 libspice-server1 libusbredirparser1 libxen-4.9 libxenstore3.0 msr-tools qemu-block-extra qemu-kvm qemu-slof qemu-system qemu-system-arm qemu-system-common qemu-system-data qemu-system-gui qemu-system-mips qemu-system-misc qemu-system-ppc

Check the daemon service
	systemctl status libvirtd.service libvirt-guests.service

Edit the server configuration
First make a copy
	cp /etc/libvirt/libvirtd.conf /etc/libvirt/libvirtd.conf.orig
	vim /etc/libvirt/libvirtd.conf
Change the following line:
unix_sock_group = "kvm"
unix_sock_ro_perms = "0770"

Install client packages
	apt install virt-manager
Installs the following:
dmeventd ebtables gir1.2-gtk-vnc-2.0 gir1.2-libosinfo-1.0 gir1.2-libvirt-glib-1.0 gir1.2-spiceclientglib-2.0 gir1.2-spiceclientgtk-3.0 libdevmapper-event1.02.1 libgovirt-common libgovirt2 libgtk-vnc-2.0-0
  libgvnc-1.0-0 liblvm2app2.2 liblvm2cmd2.02 libosinfo-1.0-0 libphodav-2.0-0 libphodav-2.0-common libspice-client-glib-2.0-8 libspice-client-gtk-3.0-5 libusbredirhost1 libvirt-clients libvirt-daemon
  libvirt-daemon-driver-storage-rbd libvirt-daemon-system libvirt-glib-1.0-0 libvirt0 lvm2 osinfo-db python-asn1crypto python-certifi python-cffi-backend python-cryptography python-idna python-ipaddr
  python-ipaddress python-libvirt python-libxml2 python-openssl python-requests python-urllib3 spice-client-glib-usb-acl-helper virt-manager virt-viewer virtinst

Launch the client so it creates the default.xml configuration file
	virt-manager
	vim /etc/libvirt/storage/default.xml
<path>/vm_storage</path>

Disable startup services
	systemctl disable libvirtd.service libvirt-guests.service
Start/Stop them on demand
	systemctl restart libvirtd.service libvirt-guests.service
http://ubuntuforums.org/showthread.php?t=1389692
just ad a symbolic link to the desired target to /var/lib/libvirt/images

# Disable virbr0 nat interface
https://www.cyberciti.biz/faq/linux-kvm-disable-virbr0-nat-interface/
1. List network interfaces
	ifconfig
	virsh net-list
2. Run the following
	virsh net-destroy default
	virsh net-undefine default
	systemctl restart libvirtd.service libvirt-guests.service
	ifconfig

# List domains
	virsh list

## Start/Stop a domain

	virst start openbsd
	virst shutdown openbsd

## Forceful shutdown
For unresponsive domains. Backup your VM everyday or at least backup important files including database.

	virst destroy openbsd

# Rename a domain
## Method 1
1. Shutdown the domain
	virst shutdown freebsd
2. Rename it
	virsh domrename freebsd dns1
## Method 2
1. Shutdown the domain
	virst shutdown freebsd
2. Dump the config file
	virsh dumpxml freebsd > freebsd.xml
3. Delete the VM Gust
	virsh undefine --domain freebsd
4. Modify the config file with the correct name, import the config file
	virst define freebsd.xml

# Autostart a VM guest
Create a symlink in directory /etc/libvirt/qemu/autostart of the config file
	virsh autostart domain1
	virsh autostart domain1 --disable

# Delete a VM guest
1. Get a guests storage files directory
	virsh dumpxml --domain openbsd | grep 'source file'
2. Shut it down
	virsh shutdown --domain openbsd
3. To delete a VM Guest with virsh run. Then remove the storage files
	virsh undefine --domain openbsd --delete-snapshots --remove-all-storage 
	rm -rf /nfswheel/kvm/openbsd.qcow2

If the VM guest has snapshots, delete every single one

# Using the console
## Login to console

	virsh console freebsd

## Exit a console
Exit the console in the guest login prompt.
type CTRL+Shift followed by ].
CTRL+Shift+5
CTRL+Shift+]

# All about snapshots
https://www.cyberciti.biz/faq/how-to-create-create-snapshot-in-linux-kvm-vmdomain/
The snapshot must base on qcow2 type disk.
Make sure the instance is shutdown.

## Check disk type
The output should include 'qcow2'.
	virsh dumpxml freebsd | grep -i qemu

## Create a snapshot

	virsh snapshot-create-as --domain {VM-NAME} --name "{SNAPSHOT-NAME}" --descripcion "More background information"

Where:
--domain {VM-NAME}: Domain name/VM name/id/uuid
--name "{SNAPSHOT-NAME}": Name of snapshot
--description "More background information": Provides context of the domain's state

## List snapshots
List running VMS/guests/domain from host os:

	virsh list
To see existing snapshots

	virsh snapshot-list --domain openbsd

## List snapshot information

	virsh snapshot-info --domain freebsd --snapshotname 5Sep2016_S1

## Revert to a snapshot
	virsh shutdown --domain freebsd
	virsh snapshot-revert --domain freebsd --snapshotname 5Sep2016_S1 --running

## Delete a snapshot
	virsh snapshot-delete --domain freebsd --snapshotname 5Sep2016_S2
