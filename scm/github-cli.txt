https://github.com/cli/cli
https://docs.github.com/en
https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
https://github.blog/changelog/2020-05-11-github-cli-allows-you-to-close-reopen-and-add-metadata-to-issues-and-pull-requests/
https://news.ycombinator.com/item?id=23161684
https://github.blog/2020-09-17-github-cli-1-0-is-now-available/
	wget https://github.com/cli/cli/releases/download/v2.20.2/gh_2.20.2_linux_amd64.deb
	wget https://github.com/cli/cli/releases/download/v2.20.2/gh_2.20.2_checksums.txt
	sha256sum --ignore-missing -c gh_2.20.2_checksums.txt
	dpkg -i gh_2.20.2_linux_amd64.deb
Package manager
	curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
	echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
	apt update
	apt install gh
Termux
	apt install gh
ARM64
	wget https://github.com/cli/cli/releases/download/v2.20.2/gh_2.20.2_linux_arm64.tar.gz
	wget https://github.com/cli/cli/releases/download/v2.20.2/gh_2.20.2_checksums.txt
	sha256sum --ignore-missing -c gh_2.20.2_checksums.txt
	tar xf gh_2.20.2_linux_arm64.tar.gz
	cd gh_2.20.2_linux_arm64/bin
	./gh
ARM6
	wget https://github.com/cli/cli/releases/download/v2.20.2/gh_2.20.2_linux_armv6.deb
	wget https://github.com/cli/cli/releases/download/v2.20.2/gh_2.20.2_checksums.txt
	sha256sum --ignore-missing -c gh_2.20.2_checksums.txt
	dpkg -i gh_2.20.2_linux_armv6.deb
MacOS
	brew install gh
Update
	brew upgrade gh
Windows
	winget install GitHub.cli
	winget upgrade --id GitHub.cli
Scoop
	scoop bucket add github-gh https://github.com/cli/scoop-gh.git
	scoop install gh
Update
	scoop update gh
Chocolately
	choco install gh

Config file at
~/.config/gh/
C:\Users\DAVIDY~1\AppData\Roaming\GitHub CLI

Extensions at
C:\Users\DAVIDY~1\AppData\Roaming\GitHub CLI

https://cli.github.com/manual/
	gh auth login
	gpg -d token.gpg | gh auth login --with-token
Use SSH
	gh config set git_protocol ssh
Create repository
	gh repo --help
	gh repo create my-cool-project -d "My description" -t "my_team" -h "https://homepage.com"
	gh repo create company/my-cool-project --private
List all repos
https://cli.github.com/manual/gh_repo_list
Up to 100 repositories
	gh repo list -L 100
Filter fields
	gh repo list -L 100 --json id,name,url,createdAt,updatedAt,pushedAt,sshUrl,homepageUrl,description
Rename a repository
https://cli.github.com/manual/gh_repo_rename
	gh repo rename [<new-name>] [flags]
Add collaborator from command line
https://gist.github.com/marchampson/4655798
https://developer.github.com/changes/2020-02-14-deprecating-password-auth/
https://docs.github.com/en/rest/reference/collaborators
https://cli.github.com/manual/gh_api
https://github.com/cli/cli/issues/2807
	curl -i -H 'Authorization: token my_access_token' -X PUT -H "Accept: application/vnd.github.v3+json" 'https://api.github.com/repos/my_gh_userid/my_repo/collaborators/my_collaborator_id'
	gh api -X PUT repos/:owner/:repo/collaborators/:SOMEONE
Add collaborator as read-only
	curl -i -H 'Authorization: token my_access_token' -X PUT -H "Accept: application/vnd.github.v3+json" 'https://api.github.com/repos/my_gh_userid/my_repo/collaborators/my_collaborator_id' -d '{"permission":"pull"}'
	gh api -X PUT repos/:owner/:repo/collaborators/:SOMEONE -f permission=pull
	gh api -X PUT repos/:owner/:repo/collaborators/:SOMEONE -f permission=admin
https://github.com/my_gh_userid/my_repo/invitations
Remove a collaborator
	curl -i -H 'Authorization: token my_access_token' -X DELETE -H "Accept: application/vnd.github.v3+json" 'https://api.github.com/repos/my_gh_userid/my_repo/collaborators/my_collaborator_id'
	gh api -X DELETE repos/:owner/:repo/collaborators/:SOMEONE
Check if user is a collaborator
	curl -i -H 'Authorization: token my_access_token' -X GET -H "Accept: application/vnd.github.v3+json" 'https://api.github.com/repos/my_gh_userid/my_repo/collaborators/my_collaborator_id'
	gh api -iX GET /repos/{owner}/{repo}/collaborators/{username}
Check if user permissions as collaborator
	curl -i -H 'Authorization: token my_access_token' -X GET -H "Accept: application/vnd.github.v3+json" 'https://api.github.com/repos/my_gh_userid/my_repo/collaborators/my_collaborator_id/permission'
	gh api -X GET /repos/{owner}/{repo}/collaborators/{username}/permission
List collaborators
	curl -i -H 'Authorization: token my_access_token' -X GET -H "Accept: application/vnd.github.v3+json" 'https://api.github.com/repos/my_gh_userid/my_repo/collaborators'
	gh api -X GET /repos/{owner}/{repo}/collaborators --jq ".[]|{login: .login, id: .id, role_name: .role_name, permissions: .permissions}"
Edit description (or other characteristics)
https://cli.github.com/manual/gh_repo_edit
	curl -i -H 'Authorization: token my_access_token' -X PATCH -H 'Accept: application/vnd.github.v3+json' 'https://api.github.com/repos/my_gh_userid/my_repo' -d '{"description":"This Project Rocks!"}'
	gh repo edit -d "New description" -h "https://newurl.com" --visibility private --add-topic "topics"
Delete a repo
https://cli.github.com/manual/gh_repo_delete
	curl -i -H 'Authorization: token my_access_token' -X DELETE -H "Accept: application/vnd.github.v3+json" 'https://api.github.com/repos/my_gh_userid/my_repo'
	gh repo delete [<repository>] --confirm
List repos for a user
	curl -i -H 'Authorization: token my_access_token' -X GET -H "Accept: application/vnd.github.v3+json" 'https://api.github.com/user/repos'
Release
	gh release list
View
	gh release view --json assets,id,name,tagName,url <tag>
	gh release view --json assets -q .assets[].url <tag> > links.txt
	wget2 --max-threads=1 --no-http2 --progress=bar -i links.txt
	gh release view -w <tag>
See git-cliff.txt
https://cli.github.com/manual/gh_release_create
https://docs.github.com/en/repositories/releasing-projects-on-github/about-releases
https://docs.github.com/en/rest/releases
	gh release create [<tag>] [<files>...]
Pre-release
	gh release create -p --generate-notes [<tag>] [<files>...]
	gh release create -p -F <release notes file> -t <title> [<tag>] [<files>...]
Upload more assets
	gh release upload <tag> <files>... [flags]
	gh release upload <tag> <files>... --clobber
Modify release notes
	gh release edit -F <release notes file> <tag>
Download
	gh release download <tag> -D 'C:\Users\DAVIDY~1\Downloads\' -p '*.apk' -p 'checksums.*' -A zip -A tar.gz
Open release in browser
	gh release view -w v1.0.3.1

GitHub Actions
Work with GitHub Actions in Your Terminal with GitHub CLI
https://github.blog/2021-04-15-work-with-github-actions-in-your-terminal-with-github-cli/
https://twitter.com/natfriedman/status/1382740586562691072
https://news.ycombinator.com/item?id=26822169

Extensions
https://github.com/topics/gh-extension
https://github.com/vilmibm/gh-user-status
	gh extension install vilmibm/gh-user-status
https://github.com/sheepla/gh-userfetch
	gh extension install sheepla/gh-userfetch
	gh-userfetch
https://github.com/mislav/gh-repo-collab
	gh extension install mislav/gh-repo-collab
Usage: gh repo-collab list [<repo>]
       gh repo-collab add <repo> <login> [--permission <string>]
       gh repo-collab add <repo> < logins-file.txt
       gh repo-collab remove <repo> <login>

Valid permission is one of: pull, triage, push, maintain, admin.
