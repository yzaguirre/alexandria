blog.commando.io/the-perfect-nginx-ssl-configuration/

https://scotthelme.co.uk/hybrid-rsa-and-ecdsa-certificates-with-nginx/
Check syntax
	nginx -t
https://www.eff.org/deeplinks/2015/04/effs-updated-ssl-configuration
	openssl genrsa -aes256 -out example.com.aes 4096
	openssl req -new -out example.com.csr -key example.com.aes -config example.com.cnf
	cat example.com.crt My_CA_Intermedate.crt >> example.com.pem

In order for nginx to be able to start without entering a passphrase, we need to unlock we created earlier:
	sudo openssl rsa -in example.com.aes -out /etc/ssl/private/example.com.key

See comm/mattermost.txt for nginx proxy

Edit Nginx
	 vim /etc/nginx/ssl.conf
ssl_prefer_server_ciphers on;

ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:ECDH+3DES:RSA+AES:RSA+3DES:!ADH:!AECDH:!MD5:!DSS;

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

Setup letsencrypt with webroot plugin
see tls/letsencrypt.txt
https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04
location ~ /.well-known {
	allow all;
}

Use more config files
May want to remove "default_server" atribute and add "server_name" directive.
	Edit /etc/nginx/snippets/ssl-example.com.conf
ssl_certificate /etc/letsencrypt/live/yourdomainname/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/yourdomainname/privkey.pem;

	Edit /etc/nginx/snippets/ssl-params.conf
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
ssl_ecdh_curve secp384r1;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;
add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;

ssl_dhparam /etc/ssl/certs/dhparam.pem;

	Now edit the default site config /etc/nginx/sites-available/default
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name example.com www.example.com;
    return 301 https://$server_name$request_uri;
}

server {

    # SSL configuration

    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    include snippets/ssl-example.com.conf;
    include snippets/ssl-params.conf;

Check redes/firewall.txt settings
Restart nginx
Scan with Qualys SSL Labs Report https://www.ssllabs.com/ssltest/analyze.html?d=example.com

https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04
	add-apt-repository ppa:certbot/certbot
	apt update
	apt install python-certbot-apache
	certbot --nginx -d example.com -d www.example.com
Cronjob installed at /etc/cron.d
