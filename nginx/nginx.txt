https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04
https://www.digitalocean.com/community/tutorials/nginx-essentials-installation-and-configuration-troubleshootingSSL
https://nginx.org/
Install on Debian
	apt install nginx
	nginx -v
For Red Hat-based operating systems:
	yum install nginx
you will find a lot of interesting documentation and examples on the official wiki, 
http://wiki.nginx.org
If you have specific questions though, you might as well use the forums
http://forum.nginx.org
And if you need direct assistance, there is always a bunch of regulars helping
each other out on the IRC channel #Nginx on irc.freenode.net
	# zypper install php5-fpm
	# mkdir -p /usr/var/log
	# chown david:users -R /usr/var
configure fpm
	# cp /etc/php5/fpm/php-fpm.conf.default /etc/php5/fpm/php-fpm.conf
	# vim /etc/php5/fpm/php-fpm.conf
important configuration directives that you
shouldn't miss:
-	 Edit the user(s) and group(s) used by the worker processes and optionally the UNIX sockets
-	 Address(es) and port(s) on which PHP-FPM will be listening
-	 Amount of simultaneous requests that will be served
-	 IP address(es) allowed to connect to PHP-FPM
-	 Log location

http://www.binarytides.com/php-fpm-separate-user-uid-linux/
Start it up
	# php-fpm -c /etc/php5/apache2/php.ini --pid /var/run/php-fpm.pid --fpm-config=/etc/php5/fpm/php-fpm.conf -D
	# php-fpm -c /etc/php5/cli/php.ini --pid /var/run/php-fpm.pid --fpm-config=/etc/php5/fpm/php-fpm.conf -D

Kill it
	# killall -2 php-fpm
Update the nginx config file
	# vim /etc/nginx/nginx.conf
	
location ~* \.php$ { # for requests ending with .php
	# specify the listening address and port that you configured previously
root /srv/www/htdocs
fastcgi_pass 127.0.0.1:9000;
# the document path to be passed to PHP-FPM
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
# the script filename to be passed to PHP-FPM
fastcgi_param PATH_INFO $fastcgi_script_name;
# include other FastCGI related configuration settings
include fastcgi_params;
}
Reload the service
	# service nginx reload

For Python (see django.txt):
The Nginx configuration is similar to the PHP one, modify the nginx.txt file:
	# vim 
#location / {
location ~* \.py$ {
fastcgi_pass 127.0.0.1:9000;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_
name;
fastcgi_param PATH_INFO $fastcgi_script_name;
include fastcgi_params;
}

BSDNow
http://www.bsdnow.tv/tutorials/nginx

https://www.nginx.com/blog/mitigating-the-httpoxy-vulnerability-with-nginx/
fastcgi_param HTTP_PROXY "";
proxy_set_header Proxy "";

https://www.cyberciti.biz/faq/linux-unix-nginx-access-file-log-real-ip-address-of-visitor/
	vim /etc/nginx/conf.d/default.conf
set_real_ip_from  192.168.1.4;
real_ip_header    X-Forwarded-For;

Where 192.168.1.4 is my loadbalancer

HTTP2
https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-with-http-2-support-on-ubuntu-16-04
Use custom dh param (DHE) file at 2048-bit length, use 4096-bit length for higher. Used along with RSA but not with elliptic curve algo (like prime256v1)
	openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048

Add o use similar settings to the "default" config file:
	vim /etc/nginx/sites-available/default
listen 443 ssl http2 default_server;
listen [::]:443 ssl http2 default_server;
server_name example.com;
ssl_certificate /etc/nginx/ssl/example.com.crt;
ssl_certificate_key /etc/nginx/ssl/example.com.key;
ssl_prefer_server_ciphers on;
ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
ssl_dhparam  /etc/nginx/ssl/dhparam.pem; # when using RSA algo.

Optimizing Nginx for Best Performance	
Edit /etc/nginx/nginx.conf
Enabling Connection Credentials Caching
To enable session caching, add these lines at the end of http block of your nginx.conf file:
ssl_session_cache shared:SSL:5m;
ssl_session_timeout 1h;

Enabling HTTP Strict Transport Security (HSTS)
add_header Strict-Transport-Security "max-age=15768000; includeSubDomains" always;

Check for syntax errors
	nginx -t

Restart nginx
	systemctl restart nginx
