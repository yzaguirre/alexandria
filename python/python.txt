Python 3.12.0 is to remove long-deprecated items
https://discuss.python.org/t/python-3-12-0-alpha-2-released/21087
https://news.ycombinator.com/item?id=33620692

https://www.python.org
	apt install python3.9 python3.9-venv python3-pip
For Python 3.10
	apt install python3.10
Windows
	winget install Python.Python.3.11
What's New in Python 3.12
https://docs.python.org/3/whatsnew/3.12.html
https://news.ycombinator.com/item?id=37930821
	winget install Python.Python.3.12
Installs at %USERPROFILE%\AppData\Local\Programs\Python\Python310
For Python 3.9.10
https://www.python.org/downloads/release/python-399/
https://www.python.org/downloads/release/python-3910/
	wget https://www.python.org/ftp/python/3.9.10/python-3.9.10-amd64.exe
	wget https://www.python.org/ftp/python/3.9.10/python-3.9.10-amd64.exe.asc
	gpg --verify python-3.9.10-amd64.exe.asc
	md5sum python-3.9.10-amd64.exe
747ac35ae667f4ec1ee3b001e9b7dbc6
	explorer python-3.9.10-amd64.exe
Disable the MAX_PATH path length limitation
https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=cmd
https://stackoverflow.com/questions/27680647/does-max-path-issue-still-exists-in-windows-10
https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=powershell#enable-long-paths-in-windows-10-version-1607-and-later
	New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
All other Windows installation
python is C:\Python39\python
          C:\Python39\Scripts\
          C:\Users\dyzag\AppData\Roaming\Python\Python39\Scripts\
          C:\Users\dyzag\AppData\Local\Programs\Python\Python39
          C:\Users\dyzag\AppData\Local\Programs\Python\Python39\Scripts
python is C:\Users\dyzag\AppData\Local\Programs\Python\Python310\python
          C:\Users\dyzag\AppData\Local\Programs\Python\Python310\Scripts\
python is C:\Users\dyzag\AppData\Local\Microsoft\WindowsApps\python

Uninstall python from Microsoft store
Settings -> App execution aliases
C:\Users\dyzag\AppData\Local\Microsoft\WindowsApps\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe
C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_1.16.13405.0_x64__8wekyb3d8bbwe

	python3 -m pip install -U autopep8 --user

https://www.debugpoint.com/2021/10/install-python-3-10-ubuntu/

Python 3.11 is faster than 3.8
https://jott.live/markdown/py3.11_vs_3.8
https://news.ycombinator.com/item?id=33345421
Toml in Python 3.11
What's New in Python 3.11?
https://www.youtube.com/watch?v=LtR67QfgbmE

CentOS
https://techglimpse.com/install-python-openssl-support-tutorial/
https://stackoverflow.com/questions/5937337/building-python-with-ssl-support-in-non-standard-location
https://docs.python.org/3.12/using/unix.html#custom-openssl
https://docs.python.org/3.12/using/configure.html?highlight=compile
https://stackoverflow.com/questions/70464585/error-when-installing-openssl-3-0-1-cant-locate-ipc-cmd-pm-in-inc
https://github.com/openssl/openssl/issues/11664
	yum install perl-IPC-Cmd perl-core
	wget https://www.openssl.org/source/openssl-3.1.3.tar.gz
	wget https://www.openssl.org/source/openssl-3.1.3.tar.gz.sha256
	wget https://www.openssl.org/source/openssl-3.1.3.tar.gz.asc
	wget https://www.openssl.org/source/openssl-3.1.3.tar.gz.sha1
	gpg --keyserver keyserver.ubuntu.com --recv-keys 0xEFC0A467D613CB83C7ED6D30D894E2CE8B3D79F5
	gpg --verify openssl-3.1.3.tar.gz.asc
	cat openssl-3.1.3.tar.gz.sha256
	sha256sum openssl-3.1.3.tar.gz
	cat openssl-3.1.3.tar.gz.sha1
	sha1sum openssl-3.1.3.tar.gz
	tar -xzf openssl-3.1.3.tar.gz
	cd openssl-3.1.3
	./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl
x	./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl --libdir=lib
	make -j8 depend
	make -j8
	make test
x	make install
	make install_sw
https://stackoverflow.com/questions/54124906/openssl-error-while-loading-shared-libraries-libssl-so-3
https://stackoverflow.com/questions/44290926/pip-cannot-confirm-ssl-certificate-ssl-module-is-not-available
	cd /usr/local
	cp -r openssl/lib64/* lib64
	ldconfig /usr/local/lib64/
https://linuxstans.com/how-to-install-python-centos/
	yum update
https://stackoverflow.com/questions/1210664/no-module-named-sqlite3
	yum install openssl-devel bzip2-devel libffi-devel sqlite-devel
	yum groupinstall "Development Tools"
	wget https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
	tar -xzf Python-3.12.0.tgz
	cd Python-3.12.0
	vim Modules/Setup
_socket socketmodule.c
SSL=/usr/local/openssl
_ssl _ssl.c \
 -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \
 -L$(SSL)/lib64 -lssl -lcrypto
	make clean
	export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/openssl/lib64
	./configure --enable-optimizations --with-openssl=/usr/local/openssl --enable-loadable-sqlite-extensions 
	make -j8 altinstall
	python3.12 -V

did you know that you can use functions as values in a Python dictionary?
https://twitter.com/DynamicWebPaige/status/1456110881553612803

Merge 2 dictionaries, since python 3.9
z = x | y
using dictionary unpacking
z = {**x, **y}
Classic way of merging
z = x.copy()
z.update(y)

5 Python tricks that will improve your life
Aaron Jack
https://www.youtube.com/watch?v=5tcs2qXP3Pg

http://www.emoticode.net/python/hadcore-httprequest.html
http://www.emoticode.net/python/httprequest.html

https://www.python.org/downloads/
https://stackoverflow.com/questions/58984026/official-python-gpg-signing-key-where-is-it-gpg-using-rsa-key-fc6246434870
Windows
	choco install python3
Installer 3.11.0
	curl -o python-3.11.0-amd64.exe https://www.python.org/ftp/python/3.11.0/python-3.11.0-amd64.exe
	curl -o python-3.11.0-amd64.exe.asc https://www.python.org/ftp/python/3.11.0/python-3.11.0-amd64.exe.asc
	gpg --verify python-3.11.0-amd64.exe.asc
	start python-3.11.0-amd64.exe
Install setup tools and pip on Windows
http://stackoverflow.com/questions/4750806/how-to-install-pip-on-windows
http://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat
	Create new environment variable VS90COMNTOOLS=%VS110COMNTOOLS%
Installer 3.10.10
	wget https://www.python.org/ftp/python/3.10.10/python-3.10.10-amd64.exe
	wget https://www.python.org/ftp/python/3.10.10/python-3.10.10-amd64.exe.asc
	gpg --verify python-3.10.10-amd64.exe.asc
	start python-3.10.10-amd64.exe
http://www.lfd.uci.edu/~gohlke/pythonlibs/#setuptools
http://www.lfd.uci.edu/~gohlke/pythonlibs/#pip

Its installed at:
C:\Python310\Scripts\
So make that directory to PATH variable.

Install easy tools on *NIX
	# apt-get install python-setuptools # python3-setuptools for python3
Install pip on *NIX
	# apt-get install python-pip # python3-pip for python3
Later can install thinks like:
	pip install httpie
	
Better install latest version
	$ wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py
	# python ez_setup.py
http://www.pip-installer.org/en/latest/installing.html
	$ wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py
	$ python get-pip.py
	$ wget https://pypi.python.org/packages/source/p/pip/pip-1.4.1.tar.gz
	$ tar xzf pip-1.4.1.tar.gz -C ~/tmp
	$ cd ~/tmp/pip-1.4.1
	# python setup.py install

Upload file via FTP
http://www.emoticode.net/python/upload-file-via-ftp.html

The Python script language allows a quick httpd service called
SimpleHTTPServer, and you can share the local directory you're in
using the command
	python -m SimpleHTTPServer
Python 3
https://appdividend.com/2019/02/06/python-simplehttpserver-tutorial-with-example-http-request-handler/
	python3 -m http.server 9000
Simple Python 3 HTTP server for logging all GET and POST requests
https://gist.github.com/mdonkers/63e115cc0c79b4f6b8b3a6b797e485c7#file-server-py
https://pypi.org/project/pyserv/
	sudo -H pip install -U pyserv
	serv [port]
	serv 8080

http://michelanders.blogspot.com/2011/10/implementing-https-server-in-python.html
http://www.linuxjournal.com/content/tech-tip-really-simple-http-server-python
http://code.activestate.com/recipes/442473-simple-http-server-supporting-ssl-secure-communica/

Read from command line arguments
https://www.tutorialspoint.com/python/python_command_line_arguments.htm
	import sys
	print(sys.argv[1])

Read from stdin
https://docs.python.org/3/library/functions.html
https://stackoverflow.com/questions/1450393/how-do-you-read-from-stdin
name = input("Enter your name: ")

https://stackoverflow.com/questions/12400256/python-converting-epoch-time-into-the-datetime
	time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(1347517370))
	import datetime
	datetime.datetime.fromtimestamp(1347517370).strftime('%c')
'2012-09-13 02:22:50'
TODAY_DATE = datetime.datetime.today().strftime('%Y-%m-%d %H:%M:%S')
'2021-07-13 22:26:03'

dateutil - powerful extensions to datetime
https://dateutil.readthedocs.io/en/stable/
	sudo -H pip3 install python-dateutil
from dateutil.parser import *
now = parse("Sat Oct 11 17:13:46 UTC 2003")
now.timestamp()
date = datetime.datetime.fromtimestamp(now.timestamp())

Base64
https://docs.python.org/3/library/base64.html
	import base64
	base64.decodestring(s)

Open files
https://docs.python.org/3/library/functions.html#open
Check if file exists
import os
if os.path.isfile("filename.txt"): # file exists
	f = open("filename.txt")
if os.path.isdir(file_path): # directory exists
if os.path.exists(file_path): # file or directory exists

Path lib module
File Organizing with Python: Rename, Move, Copy & Delete Files and Folders
https://www.youtube.com/watch?v=NOvFZamGXXo
from pathlib import Path
my_file = Path("/path/to/file.txt")
if my_file.is_file():
if my_file.is_dir():
if my_file.exists():

Create a nested directory
https://docs.python.org/3/library/pathlib.html
from pathlib import Path
Path("./data/subdir").mkdir(parents=True, exist_ok=True)
Old method
import os
if not os.path.exists("./data/subdir"):
	os.makedirs("./data/subdir")

Argument parser
https://docs.python.org/3/library/argparse.html
https://stackoverflow.com/questions/1009860/how-to-read-process-command-line-arguments
from argparse import ArgumentParser

parser = ArgumentParser()
parser.add_argument("-f", "--file", dest="filename",
                    help="write report to FILE", metavar="FILE")
parser.add_argument("-q", "--quiet",
                    action="store_false", dest="verbose", default=True,
                    help="don't print status messages to stdout")

args = parser.parse_args()

Find a index
my_list = ["apple, "banana", "cherry"]
try:
	idx = my_list.index("orange")
except ValueError:
	idx = -1
Get all indices of repeated values
my_list = ["apple", "apple", "cherry"]
my_list.index("apple")
idxs = [i for (i, e) in enumerate(my_list) if e == "apple"]

Concatenate two lists
a = [1, 2]
b = [3, 4]
# shallow copy
c = [*a, *b]

Reverse a list
https://stackoverflow.com/questions/529424/traverse-a-list-in-reverse-order-in-python
a = ["foo", "bar", "baz"]
for i in reversed(a):
	print(i)

Make executable
https://stackoverflow.com/questions/4235834/how-to-make-python-scripts-executable-on-windows
https://stackoverflow.com/questions/5458048/how-to-make-a-python-script-standalone-executable-to-run-without-any-dependency
	pip install pyinstaller
	pyinstaller youprogram.py
Check dist/ directory
https://stackoverflow.com/questions/43124775/why-python-3-6-1-throws-attributeerror-module-enum-has-no-attribute-intflag
	pip uninstall enum34

Key exists in dictionary
https://stackoverflow.com/questions/1602934/check-if-a-given-key-already-exists-in-a-dictionary
	if key in d:
        d[key] += 1
    else:
        d[key] = 1

Figlet
https://www.linux-magazine.com/Issues/2020/232/curses
	sudo -H pip3 install pyfiglet

Virtual environment
https://docs.python.org/3/library/venv.html
	sudo apt install python3.10-venv
	python3.10 -m venv entorno
	source entorno/bin/activate
or
	. entorno/bin/activate
cmd.exe
	C:\> <venv>\Scripts\activate.bat
PowerShell
PS C:\> <venv>\Scripts\Activate.ps1

	pip install pytest
	pytest
Exit
	deactivate
Save requirements
	pip freeze > requirements.txt

Create copy of array
a = [1, 2, 3, 4]
for item in a[:]:
	print(item)
Or
a[:] = [x for x in a if not even(x)]

Using iter tools
from itertools import filterfalse
a[:] = filterfalse(even, a)
 
Subprocess
https://docs.python.org/3/library/subprocess.html
https://youtu.be/qUeud6DvOWI?t=360
import subprocess
subprocess.run(["ls", "-l"])
subprocess.run(["ls", "-l"], capture_output=True)

import os
os.system("ls -l")

subprocess.Popen(["/usr/bin/git", "commit", "-m", "Fixes a bug."])

Lambdas in Python - One Line Anonymous Functions
https://www.youtube.com/watch?v=ZnkV6ST4a_U
	a = lambda x, y: x + y
	b = lambda x: lambda y: x + y
	print(b(1)(2))

The #Python lambda is frequently used in conjunction with the `map()` function. 🐍🔥
If you're a fan of functional programming, the following code style will look familiar
https://twitter.com/driscollis/status/1478109446954004487
	list(map((lambda x: x*3), range(5)))
[0, 3, 6, 9, 12]

List comprehension:
	[3 * x for x in range(5)]

Iterate dictionary
https://realpython.com/iterate-through-dictionary-python/
for key, value in a_dict.items():
	print(key, '->', value)

Dictionary to string
https://www.askpython.com/python/string/dictionary-to-a-string
	str(my_dict)
String to dictionary
https://www.tutorialspoint.com/How-to-convert-a-string-to-dictionary-in-Python
	import json
	x = json.loads("{'foo' : 'bar', 'hello' : 'world'}")
Dictionary to json
https://www.geeksforgeeks.org/how-to-convert-python-dictionary-to-json/
	json.dumps(dict, indent=4)
Write the dictionary as json file
with open("sample.json", "w") as outfile:
    json.dump(dictionary, outfile)

Tuple
Length
https://www.oraask.com/wiki/python-tuple-length
len(my_tuple)

F-Strings
https://datagy.io/python-f-strings/

Docstring
https://www.geeksforgeeks.org/python-docstrings/
help(YoutubeDL)
print(YoutubeDL.__doc__)

Ternary
https://www.tutorialspoint.com/ternary-operator-in-python
	[on_true] if [expression] else [on_false]
	a if (a>b) else b

Escape for shell
https://docs.python.org/3/library/shlex.html
https://stackoverflow.com/questions/18116465/escape-a-string-for-shell-commands-in-python
https://9to5answer.com/valueerror-no-closing-quotation
import shlex
# from shlex import quote
shlex.quote("This is muh' music.mp4")
Only works for posix OS

Secure Login System in Python
https://www.youtube.com/watch?v=3NEzo3CfbPg
