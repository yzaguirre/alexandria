https://github.com/powershell/powershell
https://devblogs.microsoft.com/powershell/general-availability-of-powershell-7-2/
https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-linux?view=powershell-7
https://docs.microsoft.com/en-us/powershell/scripting/install/install-ubuntu?view=powershell-7
	apt install wget apt-transport-https software-properties-common
	wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
Register the Microsoft repository GPG keys
	sudo dpkg -i packages-microsoft-prod.deb
Update the list of products
	sudo apt update
Enable the "universe" repositories
	sudo add-apt-repository universe
Install PowerShell
	sudo apt install powershell
Manual install
	wget https://github.com/PowerShell/PowerShell/releases/download/v7.2.1/powershell_7.2.2-1.deb_amd64.deb
	sha256sum powershell_7.2.2-1.deb_amd64.deb
800C8676B1B346DF51B68E564E5C3B08A5F1B4ADC66DCF304004CE8E7D747C72
	dpkg -i powershell_7.2.2-1.deb_amd64.deb
	apt install -f
Windows
How to install latest version of powershell in Windows 11 | Upgrade Powershell to 7.2.0
https://www.youtube.com/watch?v=bWw7f5yVvGQ
	winget install Microsoft.PowerShell
Binary
	wget https://github.com/PowerShell/PowerShell/releases/download/v7.2.2/PowerShell-7.2.2-win-x64.msi
	wget https://github.com/PowerShell/PowerShell/releases/download/v7.2.2/hashes.sha256
	& 'C:\Program Files\Git\bin\bash.exe'
	dos2unix hashes.sha256
	sha256sum -c --ignore-missing hashes.sha256
	start PowerShell-7.2.2-win-x64.msi
Installed at C:\Program Files\PowerShell\7

Usage
	pwsh.exe

Profile at
https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.2
https://lazyadmin.nl/powershell/powershell-profile/
$PROFILE
C:\Users\dyzag\Documents\PowerShell\Microsoft.PowerShell_profile.ps1
~/.config/powershell/Microsoft.PowerShell_profile.ps1

Para correr Scripts
	Get-ExecutionPolicy -List
	Set-ExecutionPolicy unrestricted

Crear Profile
http://www.howtogeek.com/126469/how-to-create-a-powershell-profile/
	New-Item -Path $Profile -Type File -Force
	notepad $Profile

Create function
	vim C:\Users\dyzag\Documents\PowerShell\Microsoft.PowerShell_profile.ps1
Function List-LSD {lsd.exe --long}

Alias
Setting up aliases in Powershell
https://www.youtube.com/watch?v=0Rl_V079HEw
https://dev.to/seankilleen/how-to-create-a-powershell-alias-with-parameters-3g53
https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_aliases?view=powershell-7.2
	Get-Alias ls
Add Alias
	New-Alias -Name gas -Value Get-AuthenticodeSignature
	New-Alias -Name ll -Value ""
Remove
	Remove-Alias ll
Known Alias
Get clipboard
	gcb
Set clipboard
	scb

Load scripts
https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/import-module?view=powershell-7.2
Import-Module -Name c:\ps-test\modules\test.ps1
https://www.donnfelker.com/loading-powershell-profiles-from-other-script-files/
$fileContents = [string]::join([environment]::newline, (get-content -path C:\Users\dyzag\Documents\PowerShell\completion.ps1))
invoke-expression $fileContents

Eject USB
Dismount-DiskImage G:\

Shortcuts
https://superuser.com/questions/392061/how-to-make-a-shortcut-from-cmd
https://stackoverflow.com/questions/30028709/how-do-i-create-a-shortcut-via-command-line-in-windows
powershell "\$s=(New-Object -COM WScript.Shell).CreateShortcut('code\Caddyr.lnk');\$s.TargetPath='C:\Users\david\Documents\GitHub\Caddyr';\$s.Save()"

Print assembly version
https://stackoverflow.com/questions/1710935/how-do-i-find-the-publickeytoken-for-a-particular-dll
	([system.reflection.assembly]::loadfile("C:\..\Full_Path\..\MyDLL.dll")).FullName
MyDLL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=669e0ddf0bb1aa2a

Import Excel to SQL Server database
https://github.com/microsoft/azuredatastudio/issues/200
https://github.com/SQLvariant/Demos/blob/master/Presentations/Ignite2018-THR2114/2A_Import-Excel.ps1

https://stackoverflow.com/questions/9086880/t-sql-export-to-new-excel-file
	Invoke-Sqlcmd -Query $Query -Database $Database -ServerInstance $Server | Export-Csv $FilePath

Compress ZIP
See ../compression/powershell.txt

TLS Certificate
See ~/tls/tls-powershell.txt

Log the processes
	Get-Process | Out-File C:\Users\dyzag\ProcessesPS.txt
Log the services
	Get-Service | Out-File C:\Users\dyzag\ServicesPS.txt
Log in CSV
	Get-Process | Out-Csv C:\Users\dyzag\ProcessesPS.csv

Compare 2 files
	$ListReferencia = Get-Content "C:\PowerShell\ListaOrigen.txt"
	$ListDiferencia = Get-Content "C:\PowerShell\ListaDestino.txt"
	Compare-Object $ListReferencia $ListDiferencia

List DNS cache
	Get-DnsClientCache
Clean DNS cache
	Clear-DnsClientCache
Replaces
	ipconfig /flushdns

Date
	date
https://ss64.com/ps/get-date.html
	Get-Date
https://ss64.com/ps/syntax-dateformats.html
	Get-Date -format yyyy-MM-dd_HH.mm.ss
2019-02-20_15.33.17

List network adapters
	Get-NetAdapter

Refresh environment variables
	refreshenv

How to Remove the Banner Message in PowerShell
https://stackoverflow.com/questions/49840525/how-to-remove-the-banner-message-in-powershell
	pwsh.exe -NoLogo

Select a file
https://stackoverflow.com/questions/43273178/powershell-to-list-files-and-have-the-user-select-one
Print
	Get-ChildItem C:\PROD\transfert | Out-GridView -Title 'Choose a file' -PassThru | ForEach-Object { $_.FullName }
Store it in file
	$filenames = @(Get-ChildItem C:\PROD\transfert | Out-GridView -Title 'Choose a file' -PassThru)

$files = Get-ChildItem -Path C:\PROD\transfert -File
$fileChoices = @()

for ($i=0; $i -lt $files.Count; $i++) {
  $fileChoices += [System.Management.Automation.Host.ChoiceDescription]("$($files[$i].Name) &$($i+1)")
}

$userChoice = $host.UI.PromptForChoice('Select File', 'Choose a file', $fileChoices, 0) + 1

# do something more useful here...
Write-Host "you chose $($files.Get($userChoice - 1).FullName)"

Escape new lines
https://devblogs.microsoft.com/scripting/powertip-new-lines-with-powershell/
Use the `n character
Note
If you need a carriage return, use `r
For a carriage return and a new line, use `r`n

Echo
https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Utility/Write-Output?view=powershell-7
	Write-Output "Hello World"
	Write-Output "Home directory: $HOME"
